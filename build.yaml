---
####################################################
#          ModuleBuilder Configuration             #
####################################################

BuiltModuleSubdirectory: module
CopyPaths:
  - bin
  - checks
  - functions
  - internal
  - xml
Encoding: UTF8
# Can be used to manually specify module's semantic version if the preferred method of
# using GitVersion is not available, and it is not possible to set the session environment
# variable `$env:ModuleVersion`, nor setting the variable `$ModuleVersion`, in the
# PowerShell session (parent scope) before running the task `build`.
#SemVer: '99.0.0-preview1'

VersionedOutputDirectory: true

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

# NestedModule:
#     DscResource.Common:
#       CopyOnly: true
#       Path: ./output/RequiredModules/DscResource.Common
#       AddToManifest: false
#       Exclude: PSGetModuleInfo.xml

####################################################
#       Sampler Pipeline Configuration             #
####################################################
BuildWorkflow:
  '.':
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
#    - Create_changelog_release_output
#    - Generate_Conceptual_Help
#    - Generate_Wiki_Content

  pack:
    - build
    - package_module_nupkg

  # Defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Invoke_Pester_Tests_v5 
    - Pester_Tests_Stop_On_Fail
    # Use this task if pipeline uses code coverage and the module is using the
    # pattern of Public, Private, Enum, Classes.
    #- Convert_Pester_Coverage
    - Pester_if_Code_Coverage_Under_Threshold

  # Use this task when you have multiple parallel tests, which produce multiple
  # code coverage files and needs to get merged into one file.
  #merge:
    #- Merge_CodeCoverage_Files

  publish:
    - publish_module_to_gallery
    - Publish_Release_To_GitHub
    - Publish_GitHub_Wiki_Content



####################################################
#       PESTER  Configuration                      #
####################################################

# PESTER CONFIG START
Pester:
  # Pester Advanced configuration.
  # If a key is not set it will be using Sampler pipeline default value.
  Configuration:
    Run:
      Path: tests/Project.Tests.ps1
        
      ExcludePath:
    Filter:
      Tag:
      ExcludeTag:
        
    Output:
      Verbosity: None
    CodeCoverage:
      Path:
      OutputFormat:
      CoveragePercentTarget: 0
      OutputPath: JaCoCo_coverage.xml
      OutputEncoding: ascii
      ExcludeTests:
    TestResult:
      OutputFormat: NUnitXML
      OutputPath:
      OutputEncoding:
      TestSuiteName:
  # Sampler pipeline configuration
  ExcludeFromCodeCoverage:
    - Modules/DscResource.Common
# PESTER CONFIG END

# Pester:
#   OutputFormat: NUnitXML
#   # Excludes one or more paths from being used to calculate code coverage.
#   ExcludeFromCodeCoverage:
#     - Modules/DscResource.Common
#   # If no scripts are defined the default is to use all the tests under the project's
#   # tests folder or source folder (if present). Test script paths can be defined to
#   # only run tests in certain folders, or run specific test files, or can be use to
#   # specify the order tests are run.
#   Script:
#     - tests/Project.Tests.ps1
#   Tag:
#   CodeCoverageThreshold: 85 # Set to 0 to bypass
#   CodeCoverageOutputFile: JaCoCo_coverage.xml
#   CodeCoverageOutputFileEncoding: ascii
#   # Use this if code coverage should be merged from several pipeline test jobs.
#   # Any existing keys above should be replaced.
#   # CodeCoverageOutputFile - the file that is created for each pipeline test job.
#   # CodeCoverageFilePattern - the pattern used to search all pipeline test job artifacts
#   # after the file specified in CodeCoverageOutputFile.
#   # CodeCoverageMergedOutputFile - the file that is created by the merge build task and
#   # is the file that should be uploaded to code coverage services.
#   #CodeCoverageOutputFile: JaCoCo_Merge.xml
#   #CodeCoverageMergedOutputFile: JaCoCo_coverage.xml
#   #CodeCoverageFilePattern: JaCoCo_Merge.xml


# Import ModuleBuilder tasks from a specific PowerShell module using the build
# task's alias. Wildcard * can be used to specify all tasks that has a similar
# prefix and or suffix. The module contain the task must be added as a required
# module in the file RequiredModules.psd1.
ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks'
#  Sampler.GitHubTasks:
#    - '*.ib.tasks'


# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

# GitHubConfig:
#   GitHubFilesToAdd:
#     - 'CHANGELOG.md'
#   GitHubConfigUserName: dscbot
#   GitHubConfigUserEmail: dsccommunity@outlook.com
#   UpdateChangelogOnPrerelease: false

